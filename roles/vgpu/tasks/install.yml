---
- name: Install OS dependencies
  vars:
    pkgs:
      - unzip
      - gcc
      - make
      - "{{ 'kernel-devel' if ansible_facts.os_family == 'RedHat' }}"
      # sriov-manage requires lspci
      - pciutils
      - mdevctl
  ansible.builtin.package:
    name: "{{ pkgs | select }}"
    state: present
  become: true

- name: Install block
  vars:
    vgpu_driver_url_components: "{{ vgpu_driver_url | urlsplit }}"
    dir_path: /opt/{{ filename | splitext | first }}
    tmp_path: "{{ dir_path }}/tmp"
    filename: "{{ vgpu_driver_url_components.path | basename }}"
    install_script: "{{ find_result.files.0.path }}"
    ansible_become: true
  when: vgpu_nvidia_driver_install_enabled | bool
  block:
    - name: Ensure target directory exists
      ansible.builtin.file:
        state: directory
        path: "{{ dir_path }}"
        owner: root
        group: root
        mode: "770"

    - name: Intall a zip
      ansible.builtin.include_tasks: install-zip.yml
      when: vgpu_driver_url[-3:] == "zip"

    - name: Intall a .deb
      ansible.builtin.include_tasks: install-deb.yml
      when: vgpu_driver_url[-3:] == "deb"

    - name: Reboot after driver install # noqa: no-handler
      ansible.builtin.reboot:
        reboot_timeout: "{{ vgpu_reboot_timeout }}"
        post_reboot_delay: 60
      when:
        - install_result is changed
        - vgpu_do_reboot | bool

- name: Install nvidia-mig-manager (Redhat)
  ansible.builtin.package:
    name: "{{ vgpu_nvidia_mig_manager_rpm_url }}"
    state: present
    disable_gpg_check: true
  become: true
  when:
    - ansible_facts.os_family == "RedHat"
    - vgpu_mig_enabled | bool

- name: Install nvidia-mig-manager (Debian)
  ansible.builtin.package:
    deb: "{{ vgpu_nvidia_mig_manager_deb_url }}"
    state: present
  become: true
  when:
    - ansible_facts.os_family == "Debian"
    - vgpu_mig_enabled | bool
